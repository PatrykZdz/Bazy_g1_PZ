

import numpy as np

# Wczytanie pliku z cenami jaj do tablicy NumPy
data = np.genfromtxt('jajka2023.csv', delimiter=';', dtype=('U16', 'U16', 'U16', float))

# Ustawienie kodowania na 'utf-8' podczas wczytywania pliku
data = np.genfromtxt('jajka2023.csv', delimiter=';', dtype=('U16', 'U16', 'U16', float), encoding='utf-8')

# Obliczenie średniej ceny jaj
avg_price = np.mean(data[:, 3])

# Wyznaczenie najtańszych i najdroższych jajek w sieciach w miastach
# Tworzymy słownik, gdzie kluczem jest miasto a wartością jest lista
# (nazwa sieci, cena za 10 jajek)
prices_dict = {}
for row in data:
    city = row[0]
    network = row[1]
    price = row[3]
    if city not in prices_dict:
        prices_dict[city] = [(network, price)]
    else:
        prices_dict[city].append((network, price))

# Dla każdego miasta wybieramy najtańszą i najdroższą sieć
result = []
for city, prices in prices_dict.items():
    min_price = float('inf')
    max_price = 0
    cheapest_network = ''
    expensive_network = ''
    for network, price in prices:
        if price < min_price:
            min_price = price
            cheapest_network = network
        if price > max_price:
            max_price = price
            expensive_network = network
    result.append((city, cheapest_network))
    result.append((city, expensive_network))


select * from postac;
# lab 4, zadanie 1a
select * from postac 
where nazwa != 'Bjorn' and rodzaj = 'wiking'
order by data_ur ASC
limit 2;
delete from postac 
where id_postaci = 6;

# lab 4, zadanie 1b
alter table postac drop primary key; 
# problem 1 - istniejące klucze obce do tej kolumny;
#tabela przetwory, walizka , ewuentualnie izba
#usuwanie kluczy obcych;
alter table przetwory drop foreign key przetwory_ibfk_1;
# aby sprawdzic nazwy kluczy obcych
show create table przetwory;
#problem 2 - atrybut auto_increment 
alter table postac modify id_postaci int;
#drop primary key powinien zadziałać
alter table postac drop primary key;

#lab4 zadanie 2a
# first - wstawiamy kolumnę jako pierwszą w tabeli 
alter table postac add pesel char (11) first;
alter table postac add primary key (pesel);
update postac set pesel=0;
select * from postac;
update postac set pesel = '74645342541' + id_postaci;
#lab 4 zadanie 2b
alter table postac modify rodzaj enum('syrena');

#lab 4 zadanie 2c
insert into postac values ('3211254355',200,'Geruda Nieszczera','syrena','2013-11-23',19,'brak',null);

# lab 4 zadanie 3a
update postac set statek = 'Statek Bjorna' 
where nazwa like '%a%';

# lab 4 zadanie 3b
update statek set max_ladownosc=max_ladownosc*0.7
where data_wodowania >= '1901-01-01'
and data_wodowanie <= '2000-12-31';
#lub
# where year (select year(data_ur) from statek; 

# lab 4 zadanie 4a
select * from postac;
alter table postac modify rodzaj enum('wiking','ptak','syrena','kobieta','waz');
insert into postac values ('1235465645',30,'Loko','waz','2010-01-23',10,null,null);

# lab 4 zadanie 4b
create table marynarz select * from postac;

# lab 4 zadanie 4c
alter table marynarz add foreign key(statek) referneces statek(nazwa_statku);

# lab 4 zadanie 5a
update marynarz set statek=null;

# lab 4 zadaanie 5b
delete from marynarz where id_postaci =12;

# lab 4 zadanie 5c
alter table postac drop foreign key 'postac_ibfk_1';
alter table postac drop foreign key 'postac_ibfk_2';
alter table postac drop foreign key 'postac_ibfk_3';

# lab 4 zadanie 5d 
alter table marynarz drop foreign key 'marynarz_ibfk_1';
alter table marynarz drop foreign key 'marynarz_ibfk_2';
drop table statek;

# lab 4 zadanie 5e
create table zwierz (id int primary key auto_increment, nazwa varchar(40), wiek int unsigned);

# lab4 zadanie 5f
select id_postaci,nazwa,wiek from postac where rodzaj ='ptak' or rodzaj ='syrena' or rodzaj ='waz';
insert into zwierz select id_postaci, nazwa, wiek from postac where rodzaj ='ptak' or rodzaj = 'syrena' or rodzaj ='waz';
